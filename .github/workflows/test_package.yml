# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and deploy

on:
  push:
    branches: [ main ]
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ main ]

jobs:
  test:

    strategy:
      fail-fast: false
      matrix:
        os:
            - image: "ubuntu-latest"
              short: "ubuntu"
            - image: "macos-13"
              short: "macos"
        qiime:
            - version: "2025.4"
              dist: "tiny"
            - version: "2025.7"
              dist: "tiny"
    runs-on: "${{matrix.os.image}}"

    steps:
    - uses: actions/checkout@v5
    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
    - shell: bash -l {0}
      run: |
        conda info
        conda list
    - name: Download Qiime2 env file
      shell: bash -l {0}
      run: |
        wget https://raw.githubusercontent.com/qiime2/distributions/refs/heads/dev/${{matrix.qiime.version}}/${{matrix.qiime.dist}}/released/qiime2-${{matrix.qiime.dist}}-${{matrix.os.short}}-latest-conda.yml
        mv qiime2-${{matrix.qiime.dist}}-${{matrix.os.short}}-latest-conda.yml env.yml
    - name: Install Qiime 2
      shell: bash -l {0}
      run: |
        conda env create -n qiime2-dev --file env.yml
    - name: Install CPLEX
      shell: bash -l {0}
      run: |
        conda activate qiime2-dev
        conda install -v -c ibmdecisionoptimization cplex
    - name: Install q2-micom
      shell: bash -l {0}
      run: |
        conda activate qiime2-dev
        conda env update -n qiime2-dev -f q2-micom.yml
        pip install -e .
    - name: Lint with black
      shell: bash -l {0}
      run: |
        conda activate qiime2-dev
        pip install black
        black --check --diff ./q2_micom
    - name: Test with pytest
      shell: bash -l {0}
      run: |
        conda activate qiime2-dev
        pip install pytest pytest-benchmark pytest-cov
        pytest --benchmark-skip --cov=q2_micom --cov-report=xml
    - name: Upload to codecov
      if: matrix.os.image == 'ubuntu-latest'
      uses: codecov/codecov-action@v5.5.1
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    needs: test
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
    - uses: actions/upload-artifact@v5
      with:
        name: python-packages
        path: dist/*
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: 'dist/*'
        body: |
          Please see https://github.com/micom-dev/q2-micom/blob/main/NEWS.md for the full release notes.
        draft: false
        prerelease: false
